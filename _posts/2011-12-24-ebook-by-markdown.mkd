---
layout: post
title: 用markdown来写开源书
---
#{{ page.title }}#
#背景#

看到[霍泰稳关于infoq的架构师电子书问题的微博](http://weibo.com/1404949082/xDeyDEaDq)和图灵社区的文章[为什么写作自由书籍？](http://www.ituring.com.cn/article/details/764)，我就想通过通过一个例子来介绍后面可能用到的技术。希望能借此机会推动国内电子书，特别是开源电子书的发展。

【声明】我并没有写书的经历，这里只是对电子书出版技术的入门介绍而已。

#从Pro Git说起#

如果你了解Git，或者想了解Git。那么你就应该知道[Pro Git](http://progit.org/)，它是Git的书中写得最好的一本（至少是之一），可是你是否知道它有中文版，而且能在iPad上及其漂亮得阅读它。并且是免费的，不是盗版的免费！如果你想要最新的，你甚至可以自己生成它。哈哈，我就是这么干的。

这一切就归功于开源社区和它后面用到的技术。

#开源书#
这里我不用多讲，就像维基百科一样，只要是开放的，社区就有人会贡献。[Pro Git]的作者Scott很慷慨的把书的内容全部共享在[github/progit](http://github.com/progit/progit)库中，使用的是[CC BY-NC-SA 3.0](http://creativecommons.org/licenses/by-nc-sa/3.0/us/)。

Scott只负责英文版，社区牛人把它翻译成了中文和其他许许多多语言，你可以在线读[Pro Git中文版](http://progit.org/book/zh/)

#开源技术生成电子书#
不仅仅开源了内容，使用的技术也整个开源了。让我们看看他是怎么做的。

## markdown原始文件 ##
由于github和stackoverflow都支持markdown，markdown也越来越流行。赞一个的是，图灵社区也支持markdown，用起来超级方便。简单来说，看着像一般的文本文件，里面加了很少的格式标记，因此看文本文件也不影响理解，格式有工具去自动化解决。

你可以直接看一下【Pro Git】的[第一章介绍的markdown原始文件](https://raw.github.com/progit/progit/master/zh/01-introduction/01-chapter1.markdown)，顺便看看github自动生成的简单[第一章介绍的html](https://github.com/progit/progit/blob/master/zh/01-introduction/01-chapter1.markdown)。

## 产生电子书 ##
### epub/mobi格式 ###
ruby的[rdiscount](https://github.com/rtomayko/rdiscount)帮你从markdown转成html格式，然后有[Calibre](calibre)附带的命令`ebook-convert`生成最终的`.mobi` (Kindle) 和 `.epub` (for iPad)。

### pdf格式###
为了能达到出版的质量，Latex是一个常用的格式，PDF也能很容易的产生出来，有关Latex，自己找找材料吧。

[pandoc](http://johnmacfarlane.net/pandoc/)能帮着从markdown转换出latex格式，然后[TexLive](http://www.tug.org/texlive/)软件中的`xelatex`再转成PDF格式。

##试验环境##
你只需要一台Linux机器（虚拟机就可以了）和简单的Linux命令就可以试验了。有git和ruby的知识那就更方便了。

我用的是Ubuntu 11.04 (Natty)

###下载Pro Git开源书###
    
	$ git clone https://github.com/progit/progit.git
	
###epub/mobi格式###

做电子书相对简单一点，因为要求没有PDF的高，字体可以不带，用Ubuntu系统的就可以了，[calibre](http://calibre-ebook.com/)就可以满足了。

如果装的Ubuntu是服务器版的（没有X-Windows），建议安装[xvfb](http://en.wikipedia.org/wiki/Xvfb)无头(headless)X服务器。

    $ sudo apt-get install ruby rubygems # ruby 1.8.7 is used
	$ sudo apt-get install calibre # calibre 0.7.44 for ubuntu 11.04
	$ gem install rdiscount ruby-debug 
	$ xvfb-run ./makeebooks zh  # 缺省.mobi格式
	$ export FORMAT=epub
	$ xvfb-run ./makeebooks zh # .epub格式
	
###PDF格式###

生成PDF是一个很复杂的东西，用的Latex，一般用TexLive系统能搞定，pandoc ....

TexLive可以用Ubuntu的方式安装，也可以下载最新的TexLive包安装。
    
    $ sudo apt-get install pandoc 
    $ sudo apt-get install texlive-xetex

xelatex [LaTeX中文排版（使用XeTeX）](http://linux-wiki.cn/wiki/LaTeX%E4%B8%AD%E6%96%87%E6%8E%92%E7%89%88%EF%BC%88%E4%BD%BF%E7%94%A8XeTeX%EF%BC%89)

    user@puppet1:~/progit$ sudo apt-get install texlive-xetex
	
! LaTeX Error: File `xkeyval.sty' not found.

	$ apt-cache search xkeyval
	texlive-latex-recommended - TeX Live: LaTeX recommended packages
	$ sudo apt-get install texlive-latex-recommended	
		
### TexLive manual install ###

http://www.tug.org/texlive/acquire-netinstall.html
http://blog.csdn.net/ustc_dylan/article/details/6196129
http://bbs.ctex.org/index.php
http://www.ctex.org/BasicKnowledge	
http://blog.csdn.net/lostaway/article/details/6177486
     
### font ##
http://www.ztxz.cn/search/result/?searchid=3315	 

配字体
http://www.tug.org/texlive/doc/texlive-zh-cn/texlive-zh-cn.pdf

#### XeTEX 的字体配 ####

如果你在 Unix 兼容的系统中安装了 xetex 软件包，需要把系统配置一番 XeTEX 才能找到随
TEX Live 安装的那些字体。为了进行配置，xetex 安装后 (不管是初始安装还是后来安装的) 都会在
TEXMFSYSVAR/fonts/conf/texlive-fontconfig.conf 创建一个必需的配置文件。

要在整个系统中使用 TEX Live 的字体 (假定你有足够的权限)，请依照下面的步骤来做：

 1. 将 texlive-fontconfig.conf 文件复制到 /etc/fonts/conf.d/09-texlive.conf。
 2. 运行 fc-cache -fsv。
 
如果你没有足够的权限执行上述操作，可以用下面的步骤将 TEX Live 字体提供给你自己，作为独
立的 XeTEX 用户：
 
 1. 将 texlive-fontconfig.conf 文件复制到 ~/.fonts.conf，其中 ~ 是你的主目录。
 2. 运行 fc-cache -fv

   sudo apt-get install language-support-fonts-zh-hans
   
另外两个package

   * cmap-adobe-gb1 - CMaps for Adobe-GB1
   * gs-cjk-resource - Resource files for gs-cjk, ghostscript CJK-TrueType extension
#


图书出版我的理解主要有几种：

 1. Microsoft的Word格式，虽然国内出版界如日中天，缺省就认它。简单好学，但是不擅长自动化，是开源的死敌。
 2. Latex格式，这是很棒的东西，特别适合学术类的各种复杂的公式等，不过学习曲线很高，国内也只有几家学术期刊使用。
 3. docbook格式是最有名的（从SGML演化过来？），
    很方便的转化出出版要的各种样式。但由于是XML格式，很多人不习惯，而且多人网上协作不是很方便。
 4. markdown和reStructureText是纯文本（plain text)的，写起来顺畅的多。
   
#其他#

本文也是我用git记录在[github](https://github.com/larrycai/larrycai.github.com)上的，你可以看到每次的变化。
    
如果对此文有兴趣，帮忙顶一下，别忘了 [@larrycaiyu](http://weibo.com/larrycaiyu)。
    
# Reference #
 1. http://share.chinatex.org/	
 2. http://manual.calibre-ebook.com/conversion.html
 3. http://calibre-ebook.com/download_linux
 4. http://johnmacfarlane.net/pandoc/
 5. http://latex.yo2.cn/articles/latex-introduction0.html
 6. http://product.china-pub.com/54569